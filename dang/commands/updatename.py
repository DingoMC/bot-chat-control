import discord
from dang.mcapi import GetNameByUUID
from dang.console import WarningDefer
from dang.models.mcuser import MCUser

VERSION = '0.1.2'
print('Loaded Python Module: ' + __name__ + ', using version: ' + VERSION)

async def main (message : discord.Message, old_name : str, new_name : str):
    try:
        await message.defer()
    except:
        WarningDefer('updatename')
    if old_name not in list(map(GetNameByUUID, [row[0] for row in MCUser.select(['mcuuid'])])):
        msg = '{0.author.mention} There is no player with name: ' + old_name
        await message.followup.send(content=msg.format(message), ephemeral=True)
        return
    if old_name == new_name:
        msg = '{0.author.mention} New name is the same as the previous one!'
        await message.followup.send(content=msg.format(message), ephemeral=True)
        return
    transfer_path = '../../../../../../root/minecraft_m/minigames/datapacks/dang/data/y_subfunc/functions/transfer.mcfunction'
    funcs = []
    transfer_objectives = ['SCU', 'SCF', 'Kx1000', 'timer', 'Hours', 'points-rank',
    'Additional', 'HourlyCrate', 'Kills', 'Deaths', 'Points', 'NLPoints', 'SWPoints',
    'SPPoints', 'BOPoints', 'HSPoints', 'SCB_Points', 'SCB_Timers', 'EWPoints',
    'ETVScore', 'ETVEscapes', 'EtVTierB', 'EtVTierL', 'EtVTierC', 'EtVTierH', 'PA_Black',
    'PA_Blue', 'PA_Slime', 'PA_Cyan', 'PA_Brown', 'PA_Amethyst', 'PA_Orange', 'PA_Gray',
    'PA_DGray', 'PA_Magenta', 'PA_Green', 'PA_Aqua', 'PA_Red', 'PA_Pink', 'PA_Yellow', 'PA_White', 'Server']
    funcs.append(str('# Transfer ' + old_name + ' -> ' + new_name + ' #'))
    funcs.append(str('# Auto-generated by dang$$ Bot #'))
    for o in transfer_objectives:
        funcs.append(str('scoreboard players operation ' + new_name + ' ' + o + ' = ' + old_name + ' ' + o))
    with open(transfer_path, 'w') as f:
        f.write('\n'.join(funcs))
    msg = '{0.author.mention} Successfully updated ' + old_name + ' to ' + new_name
    msg += '\nRun **/reload** -> To load new generated function'
    msg += '\nRun **/function y_subfunc:transfer** -> To transfer points'
    msg += '\nRun **/scoreboard players reset ' + old_name + '** -> To reset old scores'
    await message.followup.send(content=msg.format(message), ephemeral=True)
    return